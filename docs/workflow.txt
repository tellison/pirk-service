== Workflow of REST API (pseudocode throughout) ==

1. Start by figuring out what data the server can provide us.

Request:
  GET /v1/data_schemas
  
Response:
  200 OK - and a possibly empty array of data schema names in body


curl -i http://localhost:8080/v1/data_schemas

[
  "Simple Data Schema 1"
]

==================

2. Get a particular data schema

Request:
  GET /v1/data_schemas/{name}
  
curl -i  http://localhost:8080/v1/data_schemas/Simple+Data+Schema+1

{
  "name":"Simple Data Schema 1",
  "elements": [
    {
      "name":"children",
      "dataType":"string",
      "isArray":true
    },
    {
      "name":"name",
      "dataType":"string",
      "isArray":false
    },
    {
      "name":"age",
      "dataType":"int",
      "isArray":false
    }
  ]
}
==================


3. Next define a query over the data

Request:
  PUT /v1/queries/e0115ec3-9b0b-43d8-bb92-c9f66d1ea023
    
Response:
  201 Created - and a URL to the query
  
curl -i  http://localhost:8080/v1/queries/e0115ec3-9b0b-43d8-bb92-c9f66d1ea023


==================

4. Retrieve a previously stored query

Request:
  GET /v1/queries/e0115ec3-9b0b-43d8-bb92-c9f66d1ea023
    
Response:
  200 OK - And the query in the body
  
sh PUT.sh test_query.json http://localhost:8080/v1/queries/e0115ec3-9b0b-43d8-bb92-c9f66d1ea023


==================


5.  Run the query

Request:
  POST /v1/queries/<uuid>


Response:
  200 OK - and a body containing results
    
    array of entity elements
    {
     first: value
     second: value
     tenth: value
    }
    {
     first: value
     second: value
     tenth: value
    }
 
 ====
 
 editor.swagger.io
         // QuerySchema qs = new QuerySchema();
        // List<String> queryElements = new ArrayList<>();
        // Query q = new Query();
        //
        // q.setId(id);
        // q.setNumSelectors(2);
        // q.setHashBitSize(12);
        // q.setHashKey("Foobar");
        // q.setNumBitsPerDataElement(96);
        // q.setDataPartitionBitSize(8);
        // q.setNumPartitionsPerDataElement(12);
        // q.setModulus(
        // "30049399560646469676005493659082752898785212655599017144565972358099446280042588990477674146012309524890531874672789");
        // q.setQuerySchema(qs);
        // q.setQueryElements(queryElements);
        //
        // qs.setDataSchemaName("simple query");
        // qs.setDataSchemaName("Simple Data Schema 1");
        // qs.setElementNames(Arrays.asList("name", "age"));
        // qs.setFilter("com.example.Foo");
        // qs.setFilteredFields(Arrays.asList("filtered_field"));
        //
        // queryElements.add(
        // "191550723406084518591469029284995656590807890583952791477054646763013652531022594807624560411348538761707449665459721391970132574471789554192515615653292243752775621542596319777517406846487590458619682935632633366194785222228749954");
        // queryElements.add(
        // "708761260223492284214606189608835350828740716107713085191175122749726459266750635699507731862886370744878661635914854481831914893579356324072737130381958968722184499314288762113389523795210662995774011539282843855788464474546164091");
 
 